/**

Peon-SDK
---------

Peon-SDK - Copyright (c) 2002-2011 Erik Yuzwa - erik@erikyuzwa.com

This software is provided 'as-is', without any express or
implied warranty. In no event will the authors be held
liable for any damages arising from the use of this software.

Permission is granted to anyone to use this software for any purpose,
including commercial applications, and to alter it and redistribute
it freely, subject to the following restrictions:

1. The origin of this software must not be misrepresented;
   you must not claim that you wrote the original software.
   If you use this software in a product, an acknowledgment
   in the product documentation would be appreciated but
   is not required.

2. Altered source versions must be plainly marked as such,
   and must not be misrepresented as being the original software.

3. This notice may not be removed or altered from any
   source distribution.
**/
#ifndef __PEONSTDAFX_H_
#define __PEONSTDAFX_H_

#include "PeonDLLHeader.h"

#if defined( _MSC_VER )
#include "targetver.h"
#endif

/***************************************************************
* Various warnings that we need to disable at a compiler level
***************************************************************/
// Turn off warnings generated by long std templates
// This warns about truncation to 255 characters in debug/browse info
#   pragma warning (disable : 4786)

// Turn off warnings generated by long std templates
// This warns about truncation to 255 characters in debug/browse info
#   pragma warning (disable : 4503)

// disable: "conversion from 'double' to 'float', possible loss of data
#   pragma warning (disable : 4244)

// disable: "truncation from 'double' to 'float'
#   pragma warning (disable : 4305)

// disable: "<type> needs to have dll-interface to be used by clients'
#   pragma warning (disable : 4251)

// disable: "non dll-interface class used as base for dll-interface class"
#   pragma warning (disable : 4275)

// disable: "C++ Exception Specification ignored"
#   pragma warning( disable : 4290 )

// disable: "no suitable definition provided for explicit template
// instantiation request"
#   pragma warning( disable: 4661)

// disable: deprecation warnings when using CRT calls in VC8
#	pragma warning( disable: 4996)

/***************************************************************
* These headers define our OpenGL subsystem and helper functions
***************************************************************/
#include <SDL.h>
#include <SDL_opengl.h>
#include <SDL_mixer.h>
#include <SDL_image.h>
#include <SDL_ttf.h>

#include <boost/ptr_container/ptr_list.hpp>
#include <boost/ptr_container/ptr_map.hpp>

#include <cassert>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <cstdarg>
#include <cmath>

// STL containers
#include <vector>
#include <map>
#include <string>
#include <set>
#include <list>
#include <deque>
#include <queue>


// STL algorithms & functions
#include <algorithm>
#include <functional>
#include <limits>

// C++ Stream stuff
#include <fstream>
#include <iostream>
#include <iomanip>
#include <sstream>

/**
* These following blocks of preproccessor statements are used to
* wrap around statements for cleaning up either pointers or
* arrays of allocated elements.
*/
#define PEON_DELETE(p)       { if(p) { delete (p);     (p)=NULL; } }
#define PEON_DELETE_ARRAY(p) { if(p) { delete[] (p);   (p)=NULL; } }


/**
* The following block of preprocessor statements give us a bit of a hand
* when we want to do some radian to degree (or vice versa) conversions. Nothing
* fancy here.
*/
#define PEON_PI	3.141592654f
#define PEON_DEGTORAD(degree) ((degree) * (PEON_PI / 180.0f))
#define PEON_RADTODEG(radian) ((radian) * (180.0f / PEON_PI))

namespace peon
{
	class AudioEngine;
	class FileLogger;
	class IniConfig;
	class EngineCore;
	class Matrix33;
	class Matrix44;
	class MusicNode;
	class SoundFxNode;
	class SceneRenderer;
	class SceneFont;
	class Sprite;
	class SceneTexture;
	class Vector2;
	class Vector3;
	class Vector4;
}


#endif